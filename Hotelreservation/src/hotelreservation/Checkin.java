/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hotelreservation;



import com.sun.glass.events.KeyEvent;
import database.DBconnect;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sharan
 */

public class Checkin extends javax.swing.JFrame {
Connection connect = null;
ResultSet rst=null;
PreparedStatement pst=null;

    /**
     * Creates new form Checkin
     */
    public Checkin() {
        initComponents();
        connect = DBconnect.connect();
        
        
    }

    public class CustomTableCellRenderer extends DefaultTableCellRenderer {
 

    @Override

    public Component getTableCellRendererComponent(JTable table1, Object value, boolean isSelected,

            boolean hasFocus,

            int row, int column) {
        Component component =
               super.getTableCellRendererComponent(table1, value, isSelected, hasFocus, row, column);
            setHorizontalAlignment(SwingConstants.LEFT);

        return component;

    }

}
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        arrayHandler1 = new org.apache.commons.dbutils.handlers.ArrayHandler();
        jYearChooserBeanInfo1 = new com.toedter.calendar.JYearChooserBeanInfo();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txt7 = new javax.swing.JTextField();
        txt8 = new javax.swing.JTextField();
        txt9 = new javax.swing.JTextField();
        txt11 = new javax.swing.JTextField();
        txt12 = new javax.swing.JTextField();
        txt13 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        chtbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        ref = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt6 = new javax.swing.JTextField();
        txt1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt15 = new javax.swing.JTextField();
        txt16 = new javax.swing.JTextField();
        txt18 = new javax.swing.JTextField();
        txt19 = new javax.swing.JTextField();
        txt20 = new javax.swing.JTextField();
        box1 = new javax.swing.JComboBox();
        txt17 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Checkin");
        setPreferredSize(new java.awt.Dimension(1280, 725));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(1370, 700));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel17.setText("Room Charge");

        jLabel18.setText("Other Chargers");

        jLabel19.setText("Sub total");

        jLabel21.setText("Total");

        jLabel22.setText("Amount Paid");

        jLabel23.setText("Balance");

        txt7.setEditable(false);
        txt7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt7MouseClicked(evt);
            }
        });
        txt7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt7KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt7KeyTyped(evt);
            }
        });

        txt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt8ActionPerformed(evt);
            }
        });
        txt8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt8KeyTyped(evt);
            }
        });

        txt9.setEditable(false);
        txt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt9ActionPerformed(evt);
            }
        });
        txt9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt9KeyTyped(evt);
            }
        });

        txt11.setEditable(false);
        txt11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt11KeyTyped(evt);
            }
        });

        txt12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt12KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt12KeyTyped(evt);
            }
        });

        txt13.setEditable(false);
        txt13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt13KeyTyped(evt);
            }
        });

        jButton1.setText("Refresh Bill");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt12)
                    .addComponent(txt11)
                    .addComponent(txt7, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(txt8)
                    .addComponent(txt13))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txt13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel16.setText("Bill payment");

        jButton2.setText("Check out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        table1 = new javax.swing.JTable();
        table1.setDefaultRenderer(Object.class, new CustomTableCellRenderer());
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Room no", "Extra", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.getTableHeader().setReorderingAllowed(false);
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        chtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Single Rooms", "Double rooms", "Treble rooms"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(chtbl);
        if (chtbl.getColumnModel().getColumnCount() > 0) {
            chtbl.getColumnModel().getColumn(0).setResizable(false);
            chtbl.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("Today checkouts 12:00 Pm");

        ref.setText("Refresh");
        ref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel20.setText("Available Rooms");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel20)
                        .addGap(386, 386, 386)
                        .addComponent(ref))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jButton3)
                        .addGap(35, 35, 35)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel16)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(ref)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("First Name");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 48, -1, -1));

        txt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt2KeyTyped(evt);
            }
        });
        jPanel2.add(txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 45, 129, -1));

        jLabel4.setText("Last Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 74, 69, -1));

        txt3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt3KeyTyped(evt);
            }
        });
        jPanel2.add(txt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 71, 129, -1));

        jLabel5.setText("Address");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 105, 69, -1));
        jPanel2.add(txt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 102, 129, -1));

        jLabel6.setText("TP");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 133, 69, -1));

        txt5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt5KeyTyped(evt);
            }
        });
        jPanel2.add(txt5, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 133, 129, -1));

        jLabel7.setText("NIC");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 164, 69, 20));

        txt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt6ActionPerformed(evt);
            }
        });
        jPanel2.add(txt6, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 164, 129, -1));

        txt1.setEditable(false);
        txt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt1MouseClicked(evt);
            }
        });
        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });
        jPanel2.add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 130, 30));

        jButton6.setText(" guest ID");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setText("Guest Information");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel15.setText("Room Information");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel3MouseEntered(evt);
            }
        });

        jLabel8.setText("Room Type");

        jLabel9.setText("Room Number");

        jLabel10.setText("Date IN");

        jLabel11.setText("Date OUT");

        jLabel12.setText("No of Days");

        jLabel13.setText("No of Adult");

        jLabel14.setText("No of Children");

        txt15.setEditable(false);
        txt15.setEditable(false);
        txt15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt15ActionPerformed(evt);
            }
        });
        txt15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt15KeyTyped(evt);
            }
        });

        txt16.setEditable(false);
        txt16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt16MouseEntered(evt);
            }
        });
        txt16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt16ActionPerformed(evt);
            }
        });

        txt18.setEditable(false);
        txt18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt18ActionPerformed(evt);
            }
        });
        txt18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt18KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt18KeyTyped(evt);
            }
        });

        txt19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt19KeyTyped(evt);
            }
        });

        txt20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt20KeyTyped(evt);
            }
        });

        box1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Choose type--", "Single bed", "Double bed", "Threble bed" }));
        box1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box1MouseClicked(evt);
            }
        });
        box1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1ActionPerformed(evt);
            }
        });

        txt17.setDateFormatString("yyyy-MM-dd");
        txt17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt17MouseClicked(evt);
            }
        });
        txt17.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                txt17CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt17InputMethodTextChanged(evt);
            }
        });
        txt17.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt17PropertyChange(evt);
            }
        });
        txt17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt17KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt15)
                    .addComponent(txt16)
                    .addComponent(txt18)
                    .addComponent(txt19)
                    .addComponent(txt20)
                    .addComponent(txt17, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(box1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(txt17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt6ActionPerformed

    private void txt16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt16ActionPerformed

    private void txt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt8ActionPerformed

    private void txt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt9ActionPerformed
      String v1;
      String v2;
     v1=txt18.getText();
     v2=txt7.getText();
     int result = Integer.parseInt(v1);
    int result2 = Integer.parseInt(v2);
    int tot=result*result2;
     String v3=Integer.toString(tot);
     txt9.setText(v3);         // TODO add your handling code here:
    }//GEN-LAST:event_txt9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    Checkout co = new Checkout();
        co.setVisible(true); 
        this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if((!"".equals(txt1.getText()))&&(!"".equals(txt2.getText()))&&(!"".equals(txt3.getText()))&&(!"".equals(txt5.getText()))&&
        (!"".equals(txt6.getText()))&&(!"".equals(txt15.getText()))&&(!"".equals(txt17.getDate().toString()))&&(!"".equals(txt19.getText()))
        &&(!"".equals(txt20.getText()))&(!"".equals(txt12.getText()))){


        
       
        
        try {
   
String sql = "insert into guest_info (guestID,fName,lName,address,tp,nic,bill_balance,room_no,room_type) values(?,?,?,?,?,?,?,?,?)";  
// dataop > table name in your database
// id,username,password,age,email > field name in your tables.
pst = connect.prepareStatement(sql);
pst.setString(1, txt1.getText());
pst.setString(2, txt2.getText());
pst.setString(3, txt3.getText());
pst.setString(4, txt4.getText());
pst.setString(5, txt5.getText());
pst.setString(6, txt6.getText());
pst.setString(7, txt13.getText());
pst.setString(8, txt15.getText());
pst.setString(9, box1.getSelectedItem().toString());

pst.execute();
  
String sql1 = "insert into bill_info (guestID,room_chargers,other_chargers,subtotal,total,amount_paid,balance) values(?,?,?,?,?,?,?)";
// dataop > table name in your database
// id,username,password,age,email > field name in your tables.
pst = connect.prepareStatement(sql1);
pst.setString(1, txt1.getText());
pst.setString(2, txt7.getText());
pst.setString(3, txt8.getText());
pst.setString(4, txt9.getText());

pst.setString(5, txt11.getText());
pst.setString(6, txt12.getText());
pst.setString(7, txt13.getText());








pst.execute();
          
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
 Date date = new Date();
 date=txt17.getDate();
   String datestring = dateFormat.format(date);
   String sql2 = "insert into room_info (guestID,fName,room_type,room_no,date_in,date_out,no_of_days,no_of_adult,no_of_children,nic,room_charge) values(?,?,?,?,?,?,?,?,?,?,?)";

pst = connect.prepareStatement(sql2);
pst.setString(1, txt1.getText());
pst.setString(2,txt2.getText());
pst.setString(3, box1.getSelectedItem().toString());
pst.setString(4, txt15.getText());
pst.setString(5, txt16.getText());
pst.setString(6, datestring);
pst.setString(7, txt18.getText());
pst.setString(8, txt19.getText());
pst.setString(9, txt20.getText());
pst.setString(10, txt6.getText());
pst.setString(11, txt7.getText());








pst.execute();

String sql5 = "insert into search (guestID,lName,nic,room_no) values(?,?,?,?)";  
// dataop > table name in your database
// id,username,password,age,email > field name in your tables.
pst = connect.prepareStatement(sql5);
pst.setString(1, txt1.getText());
pst.setString(2, txt3.getText());
pst.setString(3, txt6.getText());
pst.setString(4, txt15.getText());


pst.execute();

String rid =box1.getSelectedItem().toString();
String sid;
sid=txt15.getText();
if(rid=="Single bed"){
    
String sql6="UPDATE single_rooms SET status='booked' WHERE room_no="+sid+"";
pst = connect.prepareStatement(sql6);
pst.execute();
}

else if(rid=="Double bed"){
    
String sql6="UPDATE double_rooms SET status='booked' WHERE room_no="+sid+"";
pst = connect.prepareStatement(sql6);
pst.execute();
}
else if(rid=="Theble bed"){
    
String sql6="UPDATE thrible_rooms SET status='booked' WHERE room_no="+sid+"";
pst = connect.prepareStatement(sql6);
pst.execute();
}



else{
JOptionPane.showMessageDialog(null, "room not succes!");
}
JOptionPane.showMessageDialog(null, "Success !");
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        
        
     
}
else{
  JOptionPane.showMessageDialog(null, "all field required!");
  
} 
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    try {
        String sql = "SELECT guestID+1 from guest_info";
        pst=connect.prepareStatement(sql);
        //pst.setString(1,EmployeeIDSearchField.getText());

        rst= pst.executeQuery(sql);
    while(rst.next()) { 
        txt1.setText(rst.getString("guestID+1"));
        }
    } catch (SQLException e ) {
    JOptionPane.showMessageDialog(null, e);

} 
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt1ActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
txt7.setText(null);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
LocalDateTime now = LocalDateTime.now();
String s1=(dtf.format(now));
txt16.setText(s1);        
        
        
            
            int row=table1.getSelectedRow();
        
        String Table_click=(table1.getModel().getValueAt(row,0).toString());
                String Table_click2=(table1.getModel().getValueAt(row,2).toString());

        
        txt15.setText(Table_click);
        txt7.setText(Table_click2);
        
        
        
       
        
        
            
        
       
        



// TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void box1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1ActionPerformed

   String rid=((JComboBox)evt.getSource()).getSelectedItem().toString(); 
   
     
   String idd;
   String ex;
   String ex1;
     try {
         if(rid=="Single bed")
            {
                DefaultTableModel model1= (DefaultTableModel)table1.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   table1.setValueAt(null, i, 0); 
                   table1.setValueAt(null, i, 1);
                   table1.setValueAt(null, i, 2);
                
                }
        String sql1 = "SELECT *  FROM single_rooms where status!='booked'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        int i=0;
        while(rst.next()) {
           idd=rst.getString("room_no");
           ex=rst.getString("extra");
           ex1=rst.getString("price");
          table1.setValueAt(idd, i, 0);
          table1.setValueAt(ex, i, 1);
          table1.setValueAt(ex1, i, 2);
           i++;
        }
       
          } 
         else if(rid=="Double bed")
         
         {
     DefaultTableModel model1= (DefaultTableModel)table1.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   table1.setValueAt(null, i, 0);
                   table1.setValueAt(null, i, 1);
                table1.setValueAt(null, i, 2);
                }
         
     
   

         String sql1 = "SELECT *  FROM double_rooms where status!='booked'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        int i=0;
        while(rst.next()) {
           idd=rst.getString("room_no");
           ex=rst.getString("extra");
           ex1=rst.getString("price");
          table1.setValueAt(idd, i, 0);
          table1.setValueAt(ex, i, 1);
          table1.setValueAt(ex1, i, 2);
           i++;}
         
         }
         else if(rid=="Threble bed")
         {
             DefaultTableModel model1= (DefaultTableModel)table1.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   table1.setValueAt(null, i, 0); 
                   table1.setValueAt(null, i, 1);
                table1.setValueAt(null, i, 2);
                }
         String sql1 = "SELECT *  FROM thrible_rooms where status!='booked'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        int i=0;
        while(rst.next()) {
           idd=rst.getString("room_no");
           ex=rst.getString("extra");
           ex1=rst.getString("price");
          table1.setValueAt(idd, i, 0);
          table1.setValueAt(ex, i, 1);
          table1.setValueAt(ex1, i, 2);
           i++;}
         
         }
     }
     catch (SQLException e ) {
    JOptionPane.showMessageDialog(null, e);
     }       
   



// TODO add your handling code here:
    }//GEN-LAST:event_box1ActionPerformed

    private void box1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1MouseClicked

        
      // TODO add your handling code here:
    }//GEN-LAST:event_box1MouseClicked

    private void txt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt1MouseClicked

    private void txt15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt15KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
            
            
        }
        
else {
    }
// TODO add your handling code here:
    
        

// TODO add your handling code here:
    }//GEN-LAST:event_txt15KeyTyped

    private void txt15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt15ActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_txt15ActionPerformed

    private void table1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_table1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_table1InputMethodTextChanged

    private void txt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyTyped
char c=evt.getKeyChar();
if((Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            
            evt.consume();
            
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt2KeyTyped

    private void txt3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt3KeyTyped
char c=evt.getKeyChar();
if((Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt3KeyTyped

    private void txt5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt5KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt5KeyTyped

    private void txt18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt18KeyTyped

        char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
             
        }
        
else {
   
     
    } 
// TODO add your handling code here:
    }//GEN-LAST:event_txt18KeyTyped

    private void txt19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt19KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt19KeyTyped

    private void txt20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt20KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt20KeyTyped

    private void txt7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt7KeyTyped
    

// TODO add your handling code here:
    }//GEN-LAST:event_txt7KeyTyped

    private void txt8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt8KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
          // TODO add your handling code here:
    }//GEN-LAST:event_txt8KeyTyped

    private void txt9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt9KeyTyped
 

// TODO add your handling code here:
    }//GEN-LAST:event_txt9KeyTyped

    private void txt11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt11KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt11KeyTyped

    private void txt12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt12KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt12KeyTyped

    private void txt13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt13KeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE)||(c==KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
        
else {
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt13KeyTyped

    private void txt7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt7MouseClicked
       // TODO add your handling code here:
    }//GEN-LAST:event_txt7MouseClicked

    private void txt7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt7KeyPressed

        
    // TODO add your handling code here:
    }//GEN-LAST:event_txt7KeyPressed

    private void txt18KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt18KeyReleased
      // TODO add your handling code here:
    }//GEN-LAST:event_txt18KeyReleased

    private void txt7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt7KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt7KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

         receptionist rsp = new receptionist();
         rsp.setVisible(true);
         this.setVisible(false);
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        String ch= txt8.getText();
        if ("".equals(ch)) {
        String r=(txt9.getText());
     
    
    
    
     
     txt11.setText(r);}
 else{
 
        int result3=Integer.parseInt(txt8.getText());
        int result2 = Integer.parseInt(txt9.getText());
     
    
    
    int tot=result3+result2;
     String v3=Integer.toString(tot);
     txt11.setText(v3);}
        
        txt18.setText("");
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");

String s2=txt16.getText();


 
    Date s1 = txt17.getDate();
     //calculate days 
        java.util.Date date1;
         java.util.Date date2;
        try {
            date1 = s1;
            date2 = f.parse(s2);
            System.out.println(f.format(date1));
            Calendar day1 = Calendar.getInstance();
    Calendar day2 = Calendar.getInstance(); 
    day1.setTime(date1);
    day2.setTime(date2);

    int daysBetween = day1.get(Calendar.DAY_OF_YEAR) - day2.get(Calendar.DAY_OF_YEAR);
    String v3=Integer.toString(daysBetween);
    txt18.setText(v3);        
    } catch (ParseException ex) {
        Logger.getLogger(Checkin.class.getName()).log(Level.SEVERE, null, ex);
    }
      int result2 = Integer.parseInt(txt7.getText());
     int result = Integer.parseInt(txt18.getText());
    
    //subtotal 
    int tot=result2*result;
     String v3=Integer.toString(tot);
     txt9.setText(v3);     

           DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
LocalDateTime now = LocalDateTime.now();
String timeto=(dtf.format(now));

        try {
          
             DefaultTableModel model1= (DefaultTableModel)chtbl.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   chtbl.setValueAt(null, i, 0);
                    chtbl.setValueAt(null, i, 1);
                 chtbl.setValueAt(null, i, 2);
                }
        String sql1 = "SELECT * FROM room_info where date_out='"+timeto+"'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        
        int i=0;
        int j=0;
        int k=0;
          
        while(rst.next()) {
            
            String idd = rst.getString("room_no");
            String idd2=rst.getString("room_type");
           if("Single bed".equals(idd2)){
           chtbl.setValueAt(idd, i, 0);
           i++;
           }
           else if("Double bed".equals(idd2)){
               chtbl.setValueAt(idd, j, 1);
               j++;
           }
          else if("Threble bed".equals(idd2)){
               chtbl.setValueAt(idd, k, 2);
               k++;
           }
            
        
        
        }
       
        
        
        
      }
     catch (SQLException e ) {
    JOptionPane.showMessageDialog(null, e);
     }            // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void txt8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt8KeyReleased
String ch= txt8.getText();
        if ("".equals(ch)) {
 
        
       String r=(txt9.getText());
     
    
    
    
     
     txt11.setText(r);}
 else{
 
        int result3=Integer.parseInt(txt8.getText());
        int result2 = Integer.parseInt(txt9.getText());
     
    
    
    int tot=result3+result2;
     String v3=Integer.toString(tot);
     txt11.setText(v3);}   // TODO add your handling code here:
    }//GEN-LAST:event_txt8KeyReleased

    private void txt8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt8KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt8KeyPressed

    private void txt12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt12KeyReleased
txt13.setText("");
        String t=txt11.getText();

int result3=Integer.parseInt(txt11.getText());
        int result2 = Integer.parseInt(txt12.getText());
        int tot=result2-result3;
                 String v3=Integer.toString(tot);
                 txt13.setText(v3);
// TODO add your handling code here:
    }//GEN-LAST:event_txt12KeyReleased

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
String ch= txt8.getText();
        if ("".equals(ch)) {
 
        
       String r=(txt9.getText());
     
    
    
    
     
     txt11.setText(r);}
 else{
 
        int result3=Integer.parseInt(txt8.getText());
        int result2 = Integer.parseInt(txt9.getText());
     
    
    
    int tot=result3+result2;
     String v3=Integer.toString(tot);
     txt11.setText(v3);}
        
        txt18.setText("");
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");

String s2=txt16.getText();


 
    Date s1 = txt17.getDate();
     
        java.util.Date date1;
         java.util.Date date2;
        try {
            date1 = s1;
            date2 = f.parse(s2);
            System.out.println(f.format(date1));
            Calendar day1 = Calendar.getInstance();
    Calendar day2 = Calendar.getInstance(); 
    day1.setTime(date1);
    day2.setTime(date2);

    int daysBetween = day1.get(Calendar.DAY_OF_YEAR) - day2.get(Calendar.DAY_OF_YEAR);
    String v3=Integer.toString(daysBetween);
    txt18.setText(v3);        
    } catch (ParseException ex) {
        Logger.getLogger(Checkin.class.getName()).log(Level.SEVERE, null, ex);
    }
      int result2 = Integer.parseInt(txt7.getText());
     int result = Integer.parseInt(txt18.getText());
    
    
    int tot=result2*result;
     String v3=Integer.toString(tot);
     txt9.setText(v3);     

        
        try {
            
             DefaultTableModel model1= (DefaultTableModel)chtbl.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   chtbl.setValueAt(null, i, 0);
                    chtbl.setValueAt(null, i, 1);
                 chtbl.setValueAt(null, i, 2);
                }
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
LocalDateTime now = LocalDateTime.now();
String timeto=(dtf.format(now));
        String sql1 = "SELECT * FROM room_info where date_out='"+timeto+"'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        
        int i=0;
        int j=0;
        int k=0;
          
        while(rst.next()) {
            
            String idd = rst.getString("room_no");
            String idd2=rst.getString("room_type");
           if("Single bed".equals(idd2)){
           chtbl.setValueAt(idd, i, 0);
           i++;
           }
           else if("Double bed".equals(idd2)){
               chtbl.setValueAt(idd, j, 1);
               j++;
           }
          else if("Threble bed".equals(idd2)){
               chtbl.setValueAt(idd, k, 2);
               k++;
           }
            
        
        
        }
       
        
        
        
      }
     catch (SQLException e ) {
    JOptionPane.showMessageDialog(null, e);
     }   

       
        
        
        
      
     

// TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void refActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refActionPerformed

        
        try {
            DefaultTableModel model1= (DefaultTableModel)chtbl.getModel();
                for(int i=0;i<model1.getRowCount();i++)
                {
                    
                   chtbl.setValueAt(null, i, 0);
                    chtbl.setValueAt(null, i, 1);
                 chtbl.setValueAt(null, i, 2);
                }
          
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
LocalDateTime now = LocalDateTime.now();
String timeto=(dtf.format(now));

        
        String sql1 = "SELECT * FROM room_info where date_out='"+timeto+"'";
        pst=connect.prepareStatement(sql1);
        rst = pst.executeQuery(sql1);
        
        int i=0;
        int j=0;
        int k=0;
          
        while(rst.next()) {
            
            String idd = rst.getString("room_no");
            String idd2=rst.getString("room_type");
           if("Single bed".equals(idd2)){
           chtbl.setValueAt(idd, i, 0);
           i++;
           }
           else if("Double bed".equals(idd2)){
               chtbl.setValueAt(idd, j, 1);
               j++;
           }
          else if("Threble bed".equals(idd2)){
               chtbl.setValueAt(idd, k, 2);
               k++;
           }
            
        
        
        }
       
        
        
        
      }
     catch (SQLException e ) {
    JOptionPane.showMessageDialog(null, e);
     }        
        // TODO add your handling code here:
    }//GEN-LAST:event_refActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void txt17KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt17KeyReleased
 txt18.setText("");
        SimpleDateFormat f = new SimpleDateFormat("yyyy/MM/dd");

String s2=txt16.getText();


 
    Date s1 = txt17.getDate();
     
        java.util.Date date1;
         java.util.Date date2;
        try {
            date1 = s1;
            date2 = f.parse(s2);
            System.out.println(f.format(date1));
            Calendar day1 = Calendar.getInstance();
    Calendar day2 = Calendar.getInstance(); 
    day1.setTime(date1);
    day2.setTime(date2);

    int daysBetween = day1.get(Calendar.DAY_OF_YEAR) - day2.get(Calendar.DAY_OF_YEAR);
    String v3=Integer.toString(daysBetween);
    txt18.setText(v3);        
    } catch (ParseException ex) {
        Logger.getLogger(Checkin.class.getName()).log(Level.SEVERE, null, ex);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txt17KeyReleased

    private void txt16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt16MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txt16MouseEntered

    private void txt18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt18ActionPerformed

    private void txt17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt17MouseClicked
        // TODO add your handling code here:
   
    }//GEN-LAST:event_txt17MouseClicked
    
    private void txt17PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt17PropertyChange
          // TODO add your handling code here:
    }//GEN-LAST:event_txt17PropertyChange

    private void txt17CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt17CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt17CaretPositionChanged

    private void jPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseEntered
     


// TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String ch= txt8.getText();
        if ("".equals(ch)) {
 
        
       String r=(txt9.getText());
     //int result = Integer.parseInt(txt18.getText());
    
    
    
     
     txt11.setText(r);}
 else{
 
        int result3=Integer.parseInt(txt8.getText());
        int result2 = Integer.parseInt(txt9.getText());
     //int result = Integer.parseInt(txt18.getText());
    
    
    int tot=result3+result2;
     String v3=Integer.toString(tot);
     txt11.setText(v3);} 
        
        int result2 = Integer.parseInt(txt7.getText());
     int result = Integer.parseInt(txt18.getText());
    
    
    int tot=result2*result;
     String v3=Integer.toString(tot);
     txt9.setText(v3);   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt17InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt17InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt17InputMethodTextChanged
  
        
    
   
    
    
      
        
    
   
    
    
    
    public static void main(String args[]) {
        
                 // TODO add your handling code here
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkin().setVisible(true);
                
            }
        });
    }
    
    
    
    
    
    
    
    
  
     
    
   
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.apache.commons.dbutils.handlers.ArrayHandler arrayHandler1;
    public static javax.swing.JComboBox box1;
    private javax.swing.JTable chtbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JYearChooserBeanInfo jYearChooserBeanInfo1;
    private javax.swing.JButton ref;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt11;
    private javax.swing.JTextField txt12;
    private javax.swing.JTextField txt13;
    public javax.swing.JTextField txt15;
    private javax.swing.JTextField txt16;
    private com.toedter.calendar.JDateChooser txt17;
    private javax.swing.JTextField txt18;
    private javax.swing.JTextField txt19;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt20;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    private javax.swing.JTextField txt8;
    private javax.swing.JTextField txt9;
    // End of variables declaration//GEN-END:variables
}

